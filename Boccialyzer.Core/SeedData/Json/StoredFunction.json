[
  {
    "proname": "boccialyzer_get_dashboard_stat",
    "sql": "CREATE OR REPLACE FUNCTION public.boccialyzer_get_dashboard_stat( IN createdby uuid, IN playerid uuid DEFAULT NULL::uuid, IN datefrom timestamp without time zone DEFAULT NULL::timestamp without time zone, IN dateto timestamp without time zone DEFAULT NULL::timestamp without time zone, IN competitionevent integer DEFAULT NULL::integer, IN side integer DEFAULT NULL::integer, IN jackdistance integer DEFAULT NULL::integer, IN eliminationstage integer DEFAULT NULL::integer, IN matchtype integer DEFAULT NULL::integer, IN tournamentid uuid DEFAULT NULL::uuid, IN tournamenttypeid uuid DEFAULT NULL::uuid, IN matchid uuid DEFAULT NULL::uuid, IN stageid uuid DEFAULT NULL::uuid ,OUT \"ShotType\" integer ,OUT \"Ratings\" numeric ,OUT \"BallCount\" bigint ,OUT \"TotalBallCount\" bigint ,OUT \"Percentage\" numeric ) RETURNS SETOF record LANGUAGE 'sql'  COST 100 VOLATILE ROWS 1000 AS $BODY$ SELECT \"ShotType\", ROUND(AVG(\"Rating\"), 2) \"Ratings\", COUNT(*) \"BallCount\", SUM(COUNT(*)) OVER ()::bigint \"TotalBallCount\", ROUND(100 * COUNT(*) / (SUM(COUNT(*)) OVER ()), 2) \"Percentage\" FROM \"Balls\" bl LEFT JOIN \"Trainings\" btr ON bl.\"TrainingId\" = btr.\"Id\" LEFT JOIN \"Stages\" st ON bl.\"StageId\" = st.\"Id\" LEFT JOIN \"Matches\" m ON st.\"MatchId\" = m.\"Id\" LEFT JOIN \"Tournaments\" mt ON m.\"TournamentId\" = mt.\"Id\" LEFT JOIN \"Trainings\" mtr ON m.\"TrainingId\" = mtr.\"Id\" WHERE bl.\"CreatedBy\" = createdby AND (playerid IS NULL OR bl.\"PlayerId\" = playerid) AND (datefrom IS NULL OR (matchtype=0 AND m.\"MatchType\" IS NULL AND btr.\"DateTimeStamp\" >= datefrom::date) OR (m.\"MatchType\"=1 AND m.\"DateTimeStamp\" >= datefrom::date) OR (m.\"MatchType\"=2 AND mtr.\"DateTimeStamp\" >= datefrom::date)) AND (dateto IS NULL OR (matchtype=0 AND m.\"MatchType\" IS NULL AND btr.\"DateTimeStamp\" <= dateto::date) OR (m.\"MatchType\"=1 AND m.\"DateTimeStamp\" <= dateto::date) OR (m.\"MatchType\"=2 AND mtr.\"DateTimeStamp\" <= dateto::date)) AND (competitionevent IS NULL OR m.\"CompetitionEvent\" = competitionevent) AND (side IS NULL OR (side=0 AND bl.\"Box\" IN (1,3,5)) OR (side=1 AND bl.\"Box\" IN (2,4,6))) AND (jackdistance IS NULL OR (jackdistance=0 AND bl.\"Distance\" < 7) OR (jackdistance=1 AND bl.\"Distance\" >= 7)) AND (eliminationstage IS NULL OR m.\"EliminationStage\" = eliminationstage) AND (matchtype IS NULL OR (matchtype=0 AND m.\"MatchType\" IS NULL) OR m.\"MatchType\" = matchtype) AND (tournamentid IS NULL OR mt.\"Id\" = tournamentid) AND (tournamenttypeid IS NULL OR mt.\"TournamentTypeId\" = tournamenttypeid) AND (matchid IS NULL OR m.\"Id\" = matchid) AND (stageid IS NULL OR bl.\"StageId\" = stageid) GROUP BY \"ShotType\" ORDER BY \"ShotType\"; $BODY$;  ALTER FUNCTION public.boccialyzer_get_dashboard_stat(uuid, uuid, timestamp without time zone, timestamp without time zone, integer, integer, integer, integer, integer, uuid, uuid, uuid, uuid) OWNER TO postgres;  COMMENT ON FUNCTION public.boccialyzer_get_dashboard_stat(uuid, uuid, timestamp without time zone, timestamp without time zone, integer, integer, integer, integer, integer, uuid, uuid, uuid, uuid) IS 'Статистика для дашборда';"
  }
]
